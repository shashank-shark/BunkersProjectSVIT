/*
 * To change WOW this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bunkersprojectsvit;

/**
 *
 * @author Shashank
 */

import java.text.SimpleDateFormat;

import java.util.Calendar;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

import org.omg.PortableInterceptor.SUCCESSFUL;

import net.proteanit.sql.DbUtils;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.sql.*;
import java.awt.Color;
import javax.swing.JFormattedTextField;
import javax.swing.JTextArea;
import javax.swing.JScrollPane;
import com.toedter.calendar.JDateChooser;

import javafx.scene.control.ProgressBar;

import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.JTable;

//import org.jdesktop.swingx.JXDatePicker;
public class Bunkers_Automated_MS extends javax.swing.JFrame {

    /**
     * Creates new form Bunkers_Automated_MS
     */
	
	/*
	 * declaring global varibles here.
	 */
	private Connection myCon = null;
	private Statement myStat = null;
	private ResultSet myRes = null;
	
	private String url = null;
	private String user = null;
	private String pass = null;
	
	int hours, totalAbsent = 0;
	
	/* I need to get the hold of absentese */
	// I got nothing else to so
	static int absentOh[] = new int[75];
	
	static String notPresentUsn[] = new String[75];
	static String notPresentName[] = new String[75];
	static String notPresentEmail[] = new String[75];
	static String PresentUsn[] = new String[75];
	int k = 0;
	java.util.Date date;
	
    public Bunkers_Automated_MS() {
    	
    	/* Get connection at the start of the program */
	    	getConnections();
	        initComponents();
	        filldetails();
			// JXDatePicker picker = new JXDatePicker();
			//picker.setDate(Calendar.getInstance().getTime());
			//picker.setFormats(new SimpleDateFormat("dd.MM.yyyy"));
        
    }

    private void filldetails() {
    	try {
			myStat = myCon.createStatement();
			myRes = myStat.executeQuery("select * from students");
			DefaultTableModel model = (DefaultTableModel)tab1Table.getModel();
			/* Now insert into the gui table */
			int i = 0;
			while (myRes.next())
			{
				model.setValueAt(myRes.getString("usn"), i, 0);
				model.setValueAt(myRes.getString("name"), i, 1);
				model.setValueAt(myRes.getString("email"), i, 2);
				i++;
			}
			
			myStat.close();
			myStat = myCon.createStatement();
			myRes = myStat.executeQuery("select * from students");
			model = (DefaultTableModel)insertDeleteTable.getModel();
			i = 0;
			
			while (myRes.next())
			{
				model.setValueAt(myRes.getString("usn"),i,0);
				model.setValueAt(myRes.getString("name"), i, 1);
				model.setValueAt(myRes.getString("email"), i, 2);
				model.setValueAt(myRes.getString("percent"), i, 3);
				
				i++;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	private void getConnections() {
		// TODO Auto-generated method stub
    	GetDatabaseConnection connObj = new GetDatabaseConnection();
		myCon = connObj.getMyConnection("totallist");
		if (myCon != null)
		{
			System.out.println("database successfully connected");
		}
		else
		{
			System.out.println("Database is not up and running on port 3306");
		}
		
		/* Now create statement */
		try {
			myStat = myCon.createStatement();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane3.setBounds(10, 10, 710, 480);
        t2Table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        shortageTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane1.setBounds(10, 10, 720, 480);
        insertDeleteTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BunkerRIP");
        setResizable(false);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 18));
        
        label = new JLabel("");
        
        label_1 = new JLabel("");
        
        label_2 = new JLabel("");
        
        label_3 = new JLabel("");
        
        label_4 = new JLabel("");
        
        label_5 = new JLabel("");
        
        label_6 = new JLabel("");
        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel8.setBounds(760, 10, 260, 490);
        jPanel1.setLayout(null);
        
                jPanel8.setBackground(new java.awt.Color(255, 255, 255));
                jPanel8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                jPanel8.setLayout(null);
                
                        jPanel1.add(jPanel8);
                        
                        JLabel lblNote = new JLabel("NOTE :");
                        lblNote.setFont(new Font("Dialog", Font.BOLD, 16));
                        lblNote.setBounds(10, 413, 70, 21);
                        jPanel8.add(lblNote);
                        
                        JLabel lblOnlyUncheckThe = new JLabel("Only uncheck the boxes if the");
                        lblOnlyUncheckThe.setFont(new Font("Dialog", Font.BOLD, 14));
                        lblOnlyUncheckThe.setBounds(10, 435, 240, 21);
                        jPanel8.add(lblOnlyUncheckThe);
                        
                        JLabel lblStudentIsAbsent = new JLabel("student is absent.");
                        lblStudentIsAbsent.setFont(new Font("Dialog", Font.BOLD, 14));
                        lblStudentIsAbsent.setBounds(10, 457, 153, 21);
                        jPanel8.add(lblStudentIsAbsent);
                        
                        JPanel panel_1 = new JPanel();
                        panel_1.setBorder(new TitledBorder(null, "UPDATE", TitledBorder.LEADING, TitledBorder.TOP, null, null));
                        panel_1.setBounds(2, 220, 248, 181);
                        jPanel8.add(panel_1);
                        panel_1.setLayout(null);
                        
                        JLabel lblUpdateToDatabase = new JLabel(" UPDATE TO DATABASE");
                        lblUpdateToDatabase.setBounds(0, 97, 236, 31);
                        panel_1.add(lblUpdateToDatabase);
                        lblUpdateToDatabase.setFont(new Font("Dialog", Font.BOLD, 18));
                        
                        JButton btnUpdate = new JButton();
                        btnUpdate.addActionListener(new ActionListener() {
                        	public void actionPerformed(ActionEvent e) {
                        		/* here we update the fields of the table who
                        		 * are absent for the current class
                        		 */
                        		boolean lol[] = new boolean[75];
                        		
                        		// initiaize all to false before
                        		for (int i = 0; i < 75; i++)
                        		{
                        			lol[i] = false;
                        		}
                        		
                        		// get the values from the checkboxes
                        		for (int i = 0; i < 75; i++)
                        		{
                        			boolean bValue = (boolean)tab1Table.getModel().getValueAt(i, 3);
                        			if (bValue == false)
                        			{
                        				lol[i] = true;
                        				totalAbsent++;
                        			}
                        			else
                        			{
                        				absentOh[i] = 999;
                        			}
                        		}
                        		
                        		// first clear the dummy values
                        		DefaultTableModel model = (DefaultTableModel)t2Table.getModel();
                        		for (int i = 0; i < 75; i++)
                        		{
                        			model.setValueAt(null, i, 0);
                        			model.setValueAt(null, i, 1);
                        			model.setValueAt(null, i, 2);
                        			model.setValueAt(null, i, 3);
                        		}
                        		
                        		// to keep track of students in temp database
                        		k = 0;
                        		
                        		// now set the values to table2
                        		model = (DefaultTableModel)t2Table.getModel();
                        		
                        		/* Again initialse these values to null */
                        		notPresentUsn = new String[75];
                        		notPresentName = new String[75];
                        		notPresentEmail = new String[75];
                        		
                        		for (int i = 0; i < 75; i++)
                        		{
                        			if (lol[i] == true)
                        			{
                        				notPresentUsn[k] = (String)tab1Table.getModel().getValueAt(i, 0);
                        				notPresentName[k] = (String)tab1Table.getModel().getValueAt(i, 1);
                        				notPresentEmail[k] = (String)tab1Table.getModel().getValueAt(i, 2);
                        				k++;
                        				model.setValueAt((String)tab1Table.getModel().getValueAt(i, 0), i, 0);
                        				model.setValueAt((String)tab1Table.getModel().getValueAt(i, 1), i, 1);
                        				model.setValueAt((String)tab1Table.getModel().getValueAt(i, 2), i, 2);
                        				
                        				/* also set the values to the table tab4 i think */
                        				
                        			}
                        			else
                        			{
                        				PresentUsn[i] = (String)tab1Table.getModel().getValueAt(i, 0);
                        			}
                        		}
                        		
                        		// we have successfully stored the values
                        		
                        		// Grab the number of hours
                        		hours = Integer.parseInt(hoursTextField.getText());
                        		
                        		// Now get a new Connection to the short list database and
                        		// enter increment the hours the classes are attended.
                        		GetResources resObj = new GetResources();
                        		resObj.getCurrentStatus(hours);
                        		
                        		/* we need to store the data of the students who are present */
                        		NotPresentToday notObj = new NotPresentToday(lol);
                        		
                        		filldetails();
                        		
                        	}
                        });
                        btnUpdate.setBounds(46, 129, 140, 40);
                        panel_1.add(btnUpdate);
                        btnUpdate.setText("UPDATE");
                        btnUpdate.setFont(new Font("Verdana", Font.BOLD, 18));
                        btnUpdate.setBorder(null);
                        
                        JLabel lblEnterTheNumber_1 = new JLabel("Enter the number of hours :");
                        lblEnterTheNumber_1.setFont(new Font("Dialog", Font.BOLD, 14));
                        lblEnterTheNumber_1.setBounds(12, 24, 224, 15);
                        panel_1.add(lblEnterTheNumber_1);
                        
                        hoursTextField = new JTextField();
                        hoursTextField.setHorizontalAlignment(SwingConstants.CENTER);
                        hoursTextField.setFont(new Font("Dialog", Font.PLAIN, 18));
                        hoursTextField.setBounds(12, 45, 224, 40);
                        panel_1.add(hoursTextField);
                        hoursTextField.setColumns(10);
                        
                        JPanel panel_6 = new JPanel();
                        panel_6.setForeground(new Color(0, 0, 0));
                        panel_6.setBackground(new Color(255, 255, 255));
                        panel_6.setBorder(new TitledBorder(null, "Select Date", TitledBorder.LEADING, TitledBorder.TOP, null, null));
                        panel_6.setBounds(2, 12, 248, 175);
                        jPanel8.add(panel_6);
                        panel_6.setLayout(null);
                        
                        JPanel panel_4 = new JPanel();
                        panel_4.setBackground(new Color(245, 255, 250));
                        panel_4.setBounds(12, 22, 224, 141);
                        panel_6.add(panel_4);
                        panel_4.setLayout(null);
                        
                        JDateChooser dateChooser = new JDateChooser();
                        dateChooser.setBounds(24, 43, 176, 39);
                        panel_4.add(dateChooser);
                        
                        lblSelectTheDate = new JLabel("Select the date :");
                        lblSelectTheDate.setFont(new Font("Dialog", Font.BOLD, 16));
                        lblSelectTheDate.setBounds(24, 12, 165, 23);
                        panel_4.add(lblSelectTheDate);
                        
                        JButton btnOk = new JButton();
                        btnOk.setBackground(new Color(245, 255, 250));
                        btnOk.addActionListener(new ActionListener() {
                        	public void actionPerformed(ActionEvent e) {
                        		date = dateChooser.getDate();
                        		System.out.println(date);
                        	}
                        });
                        jScrollPane4 = new javax.swing.JScrollPane();
                        jTabbedPane1.addTab("ENTRY", null, jScrollPane4, null);
                        tab1Table = new javax.swing.JTable();
                        
                                tab1Table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                                tab1Table.setModel(new DefaultTableModel(
                                	new Object[][] {
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                		{null, null, null, Boolean.TRUE},
                                	},
                                	new String[] {
                                		"USN", "NAME", "EMAIL-ID", "PRESENT"
                                	}
                                ) {
                                	Class[] columnTypes = new Class[] {
                                		String.class, String.class, String.class, Boolean.class
                                	};
                                	public Class getColumnClass(int columnIndex) {
                                		return columnTypes[columnIndex];
                                	}
                                });
                                jScrollPane4.setViewportView(tab1Table);
                        btnOk.setText("OK");
                        btnOk.setFont(new Font("Verdana", Font.BOLD, 18));
                        btnOk.setBorder(null);
                        btnOk.setBounds(34, 94, 140, 40);
                        panel_4.add(btnOk);
                        
                                jTabbedPane1.addTab("UPDATE", jPanel1);
                                
                                JPanel panel_13 = new JPanel();
                                panel_13.setBounds(0, 0, 762, 500);
                                jPanel1.add(panel_13);
                                panel_13.setLayout(null);
                                
                                JPanel panel_15 = new JPanel();
                                panel_15.setBorder(new TitledBorder(null, "INSTRUCTIONS", TitledBorder.LEADING, TitledBorder.TOP, null, null));
                                panel_15.setBounds(7, 25, 748, 217);
                                panel_13.add(panel_15);
                                panel_15.setLayout(null);
                                
                                JPanel panel_14 = new JPanel();
                                panel_14.setBackground(new Color(250, 240, 230));
                                panel_14.setBounds(5, 17, 738, 188);
                                panel_15.add(panel_14);
                                panel_14.setLayout(null);
                                
                                JLabel lblMakeSure = new JLabel("(*) Make sure the entry you have made is correct.");
                                lblMakeSure.setFont(new Font("DejaVu Math TeX Gyre", Font.BOLD, 16));
                                lblMakeSure.setBounds(12, 12, 475, 27);
                                panel_14.add(lblMakeSure);
                                
                                JLabel lblNowSelect = new JLabel("(*) Now select the present date from the calender.");
                                lblNowSelect.setFont(new Font("DejaVu Math TeX Gyre", Font.BOLD, 16));
                                lblNowSelect.setBounds(12, 51, 475, 27);
                                panel_14.add(lblNowSelect);
                                
                                JLabel lblEnterThe = new JLabel("(*) Enter the number of hours of class taken today.");
                                lblEnterThe.setFont(new Font("DejaVu Math TeX Gyre", Font.BOLD, 16));
                                lblEnterThe.setBounds(12, 90, 475, 27);
                                panel_14.add(lblEnterThe);
                                
                                JLabel lblNowClick = new JLabel("(*) Now click on UPDATE.");
                                lblNowClick.setFont(new Font("DejaVu Math TeX Gyre", Font.BOLD, 16));
                                lblNowClick.setBounds(12, 129, 475, 27);
                                panel_14.add(lblNowClick);
                                
                                JPanel panel_17 = new JPanel();
                                panel_17.setBorder(new TitledBorder(null, "Send SMS", TitledBorder.LEADING, TitledBorder.TOP, null, null));
                                panel_17.setBounds(2, 246, 753, 247);
                                panel_13.add(panel_17);
                                panel_17.setLayout(null);
                                
                                JPanel panel_16 = new JPanel();
                                panel_16.setBounds(5, 22, 736, 225);
                                panel_17.add(panel_16);
                                panel_16.setLayout(null);
                                
                                JLabel lblNote_1 = new JLabel("NOTE: For now sending SMS is implemented on localsystem only");
                                lblNote_1.setBounds(12, 198, 459, 15);
                                panel_16.add(lblNote_1);
                                
                                JLabel lblRecepientPhNo = new JLabel("Recepient Ph no:");
                                lblRecepientPhNo.setFont(new Font("Consolas", Font.BOLD, 18));
                                lblRecepientPhNo.setBounds(12, 41, 161, 34);
                                panel_16.add(lblRecepientPhNo);
                                
                                numberTextField = new JTextField();
                                numberTextField.setFont(new Font("Dialog", Font.BOLD, 16));
                                numberTextField.setHorizontalAlignment(SwingConstants.CENTER);
                                numberTextField.setBounds(12, 87, 242, 47);
                                panel_16.add(numberTextField);
                                numberTextField.setColumns(10);
                                
                                JPanel panel_19 = new JPanel();
                                panel_19.setBorder(new TitledBorder(null, "Enter the message", TitledBorder.LEADING, TitledBorder.TOP, null, null));
                                panel_19.setBounds(309, 13, 403, 169);
                                panel_16.add(panel_19);
                                panel_19.setLayout(null);
                                
                                JPanel panel_18 = new JPanel();
                                panel_18.setBounds(5, 17, 393, 147);
                                panel_19.add(panel_18);
                                panel_18.setLayout(null);
                                
                                
                                JScrollPane scrollPane_1 = new JScrollPane();
                                scrollPane_1.setBounds(12, 12, 369, 123);
                                panel_18.add(scrollPane_1);
                                
                                JTextArea messageTextArea = new JTextArea();
                                scrollPane_1.setViewportView(messageTextArea);
                                messageTextArea.setFont(new Font("Andale Mono", Font.BOLD, 16));
                                messageTextArea.setColumns(10);
                                messageTextArea.setRows(1);
                                messageTextArea.setLineWrap(true);
                                messageTextArea.setWrapStyleWord(true);
                                
                                JButton messageButton = new JButton("SEND");
                                messageButton.addActionListener(new ActionListener() {
                                	public void actionPerformed(ActionEvent e) {
                                		String phNo = numberTextField.getText();
                                		String messg = messageTextArea.getText();
                                		
                                		/* Now i create an object of SendSMS and send the sms */
                                		SendSMS obj = new SendSMS();
                                		obj.sendSMSTo(phNo,messg);
                                	}
                                });
                                messageButton.setFont(new Font("Dialog", Font.BOLD, 18));
                                messageButton.setBounds(46, 146, 137, 40);
                                panel_16.add(messageButton);
                                
                                JLabel lblForPersonsOf = new JLabel("For persons of Intrest Only");
                                lblForPersonsOf.setFont(new Font("Cambria", Font.BOLD, 20));
                                lblForPersonsOf.setBounds(12, 7, 279, 22);
                                panel_16.add(lblForPersonsOf);
        jPanel2.setLayout(null);

        t2Table.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        t2Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
            },
            new String [] {
                "USN", "NAME", "EMAIL-ID", "ATTENDENCE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(t2Table);

        jPanel2.add(jScrollPane3);

        jTabbedPane1.addTab("ABSENT TODAY", jPanel2);
        
        panel_2 = new JPanel();
        panel_2.setBorder(new TitledBorder(null, "Send Mail", TitledBorder.LEADING, TitledBorder.TOP, null, null));
        panel_2.setBounds(727, 11, 299, 479);
        jPanel2.add(panel_2);
        panel_2.setLayout(null);
        
        panel = new JPanel();
        panel.setBounds(5, 17, 289, 459);
        panel_2.add(panel);
        panel.setLayout(null);
        
        panel_3 = new JPanel();
        panel_3.setBounds(12, 12, 265, 41);
        panel.add(panel_3);
        panel_3.setLayout(null);
        
        JLabel lblSendMaulTo = new JLabel("Sends mail to the students who");
        lblSendMaulTo.setBounds(0, 0, 253, 25);
        panel_3.add(lblSendMaulTo);
        lblSendMaulTo.setFont(new Font("Dialog", Font.BOLD, 14));
        
        JLabel lblAreAbsentTo = new JLabel("are absent to the present hour :");
        lblAreAbsentTo.setBounds(0, 21, 265, 15);
        panel_3.add(lblAreAbsentTo);
        lblAreAbsentTo.setFont(new Font("Dialog", Font.BOLD, 14));
        
        JPanel panel_5 = new JPanel();
        panel_5.setBorder(new TitledBorder(null, "Enter the topics covered", TitledBorder.LEADING, TitledBorder.TOP, null, null));
        panel_5.setBounds(12, 123, 265, 270);
        panel.add(panel_5);
        panel_5.setLayout(null);
        
        JScrollPane scrollPane = new JScrollPane();
        scrollPane.setBounds(12, 22, 241, 236);
        panel_5.add(scrollPane);
        
        JTextArea topicsTextArea = new JTextArea();
        topicsTextArea.setFont(new Font("Andale Mono", Font.BOLD, 16));
        topicsTextArea.setColumns(10);
        topicsTextArea.setRows(1);
        topicsTextArea.setLineWrap(true);
        topicsTextArea.setWrapStyleWord(true);
        scrollPane.setViewportView(topicsTextArea);
        
        btnNewButton_1 = new JButton("SEND MAIL");
        btnNewButton_1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		/* First get the textArea content */
        		String topicsCovered = topicsTextArea.getText();
        		System.out.println(topicsCovered);
        		
        		/* First get the subject and hours */
        		String subject = subjectTextField.getText();
        		System.out.println(totalAbsent);
//        		
//        		JProgressBar progressBar = new JProgressBar(0,100);
//                progressBar.setBounds(69, 421, 189, 26);
//                panel.add(progressBar);
        		
                
//                progressBar.setValue(0);
//                progressBar.setStringPainted(true);
//        		
        		/* Now create object for sendmailtemp */
        		for (int i = 0; i < totalAbsent; i++)
        		{
        			SendMailForTemp obj = new SendMailForTemp(topicsCovered, subject,hours,notPresentEmail[i]);
//        			progressBar.setValue(i+1);
        			try {
    					CallableStatement myCalStat = myCon.prepareCall("{call get_no_of_emails(?)}");
    					myCalStat.setString(1, notPresentUsn[i]);
    					myCalStat.execute();
    				} catch (SQLException e1) {
    					e1.printStackTrace();
    				}
        		}
        		
        		
        		
        		
        		JOptionPane pobj = new JOptionPane();
        		pobj.showMessageDialog(null, "Mails sent successfully");
        		
        		/* now get hold of the stored procedure so preprare a callable statement */
        		
        	}
        });
        btnNewButton_1.setFont(new Font("Dialog", Font.BOLD, 17));
        btnNewButton_1.setBounds(66, 405, 152, 42);
        panel.add(btnNewButton_1);
        
        subjectTextField = new JTextField();
        subjectTextField.setFont(new Font("Dialog", Font.BOLD, 16));
        subjectTextField.setHorizontalAlignment(SwingConstants.CENTER);
        subjectTextField.setBounds(56, 81, 176, 30);
        panel.add(subjectTextField);
        subjectTextField.setColumns(10);
        
        JLabel lblSubject = new JLabel("SUBJECT");
        lblSubject.setFont(new Font("Dialog", Font.BOLD, 18));
        lblSubject.setBounds(95, 65, 87, 15);
        panel.add(lblSubject);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        shortageTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        shortageTable.setModel(new DefaultTableModel(
        	new Object[][] {
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        		{null, null, null},
        	},
        	new String[] {
        		"USN", "NAME", "ATTENDENCE"
        	}
        ) {
        	Class[] columnTypes = new Class[] {
        		String.class, String.class, Float.class
        	};
        	public Class getColumnClass(int columnIndex) {
        		return columnTypes[columnIndex];
        	}
        });
        jScrollPane2.setViewportView(shortageTable);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 650, 470));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jPanel3.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 20, 350, 470));
        jPanel5.setLayout(null);
        
        JPanel panel_8 = new JPanel();
        panel_8.setBorder(new TitledBorder(null, "Get shortest list", TitledBorder.LEADING, TitledBorder.TOP, null, null));
        panel_8.setBounds(0, 0, 336, 185);
        jPanel5.add(panel_8);
        panel_8.setLayout(null);
        
        JPanel panel_7 = new JPanel();
        panel_7.setBounds(5, 17, 326, 160);
        panel_8.add(panel_7);
        panel_7.setLayout(null);
        
        JLabel lblEnterTheNumber = new JLabel("Enter the number of hours of classes");
        lblEnterTheNumber.setFont(new Font("Dialog", Font.BOLD, 14));
        lblEnterTheNumber.setBounds(12, 12, 314, 15);
        panel_7.add(lblEnterTheNumber);
        
        JLabel lblInTotalTill = new JLabel("taken in total till now :");
        lblInTotalTill.setFont(new Font("Dialog", Font.BOLD, 14));
        lblInTotalTill.setBounds(12, 28, 189, 15);
        panel_7.add(lblInTotalTill);
        
        noHrsShort = new JTextField();
        noHrsShort.setHorizontalAlignment(SwingConstants.CENTER);
        noHrsShort.setFont(new Font("Dialog", Font.PLAIN, 18));
        noHrsShort.setBounds(12, 55, 302, 37);
        panel_7.add(noHrsShort);
        noHrsShort.setColumns(10);
        
        JButton getListBtn = new JButton("GET LIST");
        getListBtn.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		/* first get the number of hours */
        		int totHours = Integer.parseInt(noHrsShort.getText());
        		
        		/* here we are going to get the shortage list */
        		try {
					myRes = myStat.executeQuery("select * from attendinfo where nhours/"+totHours+" < 0.85");
					DefaultTableModel model = (DefaultTableModel)shortageTable.getModel();
					int l = 0;
					/* Now insert the entire result set into shoratgelist table */
					shortageTable.setModel(DbUtils.resultSetToTableModel(myRes));
					
					Statement freeStat = myCon.createStatement();
					myRes = freeStat.executeQuery("select * from attendinfo where nhours/"+totHours+" < 0.85");
					
					while (myRes.next())
					{
						int n = myStat.executeUpdate("update shortagelist set usn='"+myRes.getString("usn")+"', name='"+myRes.getString("name")+"' where usn='"+myRes.getString("usn")+"'");
						if (n == 0)
						{
							myStat.execute("insert into shortagelist (usn,name,percent) values ('"+ myRes.getString("usn")+"','"+myRes.getString("name")+"',0)");
						}
					}
					
					/* Now we need to insert the shoratge list guys to shortagelist table */
					myStat = myCon.createStatement();
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
        		
        		
        		
        		/* then we display it to the list */
//        		new GetShortageList().getShortageList(shortageTable);
        		
        		
        	}
        });
        getListBtn.setFont(new Font("Dialog", Font.BOLD, 18));
        getListBtn.setBounds(84, 104, 153, 37);
        panel_7.add(getListBtn);
        
        JPanel panel_21 = new JPanel();
        panel_21.setBorder(new TitledBorder(null, "Message to be sent", TitledBorder.LEADING, TitledBorder.TOP, null, null));
        panel_21.setBounds(10, 197, 336, 273);
        jPanel5.add(panel_21);
        panel_21.setLayout(null);
        
        JPanel panel_20 = new JPanel();
        panel_20.setBounds(5, 17, 326, 261);
        panel_21.add(panel_20);
        panel_20.setLayout(null);
        
        JScrollPane scrollPane_2 = new JScrollPane();
        scrollPane_2.setBounds(12, 12, 302, 188);
        panel_20.add(scrollPane_2);
        
        JTextArea mailTextArea2 = new JTextArea();
        mailTextArea2.setFont(new Font("DejaVu Serif", Font.BOLD, 16));
        mailTextArea2.setColumns(10);
        mailTextArea2.setRows(1);
        mailTextArea2.setLineWrap(true);
        mailTextArea2.setWrapStyleWord(true);
        scrollPane_2.setViewportView(mailTextArea2);
        
        JButton btnSendMail2 = new JButton("SEND MAIL");
        btnSendMail2.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		
        	}
        });
        btnSendMail2.setFont(new Font("Dialog", Font.BOLD, 14));
        btnSendMail2.setBounds(197, 209, 117, 40);
        panel_20.add(btnSendMail2);
        
        JButton btnSendSms = new JButton("SEND SMS");
        btnSendSms.setFont(new Font("Dialog", Font.BOLD, 14));
        btnSendSms.setBounds(12, 212, 117, 40);
        panel_20.add(btnSendSms);

        jTabbedPane1.addTab("SHORTAGE LIST", jPanel3);

        insertDeleteTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        insertDeleteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "USN", "NAME", "EMAIL-ID", "ATTENDENCE"
            }
        ));
        jScrollPane1.setViewportView(insertDeleteTable);
        if (insertDeleteTable.getColumnModel().getColumnCount() > 0) {
            insertDeleteTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        }
        jPanel4.setLayout(null);

        jPanel4.add(jScrollPane1);

        jTabbedPane1.addTab("INSERT / DELETE", jPanel4);
        
        JPanel panel_10 = new JPanel();
        panel_10.setBorder(new TitledBorder(null, "INSERT NEW RECORD", TitledBorder.LEADING, TitledBorder.TOP, null, null));
        panel_10.setBounds(733, 15, 293, 303);
        jPanel4.add(panel_10);
        panel_10.setLayout(null);
        
        JPanel panel_9 = new JPanel();
        panel_9.setBounds(5, 17, 283, 293);
        panel_10.add(panel_9);
        panel_9.setLayout(null);
        
        JLabel lblUsn = new JLabel("USN");
        lblUsn.setFont(new Font("Dialog", Font.BOLD, 15));
        lblUsn.setBounds(12, 18, 49, 15);
        panel_9.add(lblUsn);
        
        JLabel lblName = new JLabel("NAME");
        lblName.setFont(new Font("Dialog", Font.BOLD, 15));
        lblName.setBounds(12, 45, 49, 30);
        panel_9.add(lblName);
        
        JLabel lblEmailid = new JLabel("EMAIL-ID");
        lblEmailid.setFont(new Font("Dialog", Font.BOLD, 15));
        lblEmailid.setBounds(12, 91, 75, 15);
        panel_9.add(lblEmailid);
        
        JLabel lblAttend = new JLabel("ATT %");
        lblAttend.setFont(new Font("Dialog", Font.BOLD, 15));
        lblAttend.setBounds(12, 130, 62, 15);
        panel_9.add(lblAttend);
        
        emailIds = new JTextField();
        emailIds.setHorizontalAlignment(SwingConstants.CENTER);
        emailIds.setFont(new Font("DejaVu Math TeX Gyre", Font.BOLD, 15));
        emailIds.setColumns(10);
        emailIds.setBounds(92, 83, 179, 32);
        panel_9.add(emailIds);
        
        attendPer = new JTextField();
        attendPer.setHorizontalAlignment(SwingConstants.CENTER);
        attendPer.setFont(new Font("DejaVu Math TeX Gyre", Font.BOLD, 15));
        attendPer.setColumns(10);
        attendPer.setBounds(92, 122, 179, 32);
        panel_9.add(attendPer);
        
        nameTextField = new JTextField();
        nameTextField.setHorizontalAlignment(SwingConstants.CENTER);
        nameTextField.setFont(new Font("DejaVu Math TeX Gyre", Font.BOLD, 15));
        nameTextField.setColumns(10);
        nameTextField.setBounds(92, 45, 179, 32);
        panel_9.add(nameTextField);
        
        usnTextField = new JTextField();
        usnTextField.setHorizontalAlignment(SwingConstants.CENTER);
        usnTextField.setFont(new Font("DejaVu Math TeX Gyre", Font.BOLD, 15));
        usnTextField.setColumns(10);
        usnTextField.setBounds(92, 10, 179, 32);
        panel_9.add(usnTextField);
        
        JButton btnInsert = new JButton("INSERT");
        btnInsert.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		GetDatabaseConnection obb = new GetDatabaseConnection();
				myCon = obb.getMyConnection("totallist");
				try {
					myStat = myCon.createStatement();
					
					/* taking values from text-field */
					String usn = usnTextField.getText();
					String name = nameTextField.getText();
					String emString = emailIds.getText();
					float perAt = Float.parseFloat(attendPer.getText());
					String phoneNo = phonetextField.getText();
					
					myStat.executeUpdate("insert into students(usn,name,email,phone) values ('" + usn +"','"+name+"','"+emString+"','"+phoneNo+"'"+")");
//					System.out.println("insert into students(usn,name,email,phone,percent) values ('" + usn +"','"+name+"','"+emString+"','"+phoneNo+"',"+perAt+ ")");
					myStat.executeUpdate("insert into attendinfo(usn,name,nhours) values ('" + usn +"','"+name+"',"+0+")");
					JOptionPane jopn = new JOptionPane();
					jopn.showMessageDialog(null, "Record Successfully inserted");
					filldetails();
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				
				usnTextField.setText("");
				nameTextField.setText("");
				emailIds.setText("");
				attendPer.setText("");
				phonetextField.setText("");
        	}
        });
        btnInsert.setFont(new Font("Dialog", Font.BOLD, 18));
        btnInsert.setBounds(68, 218, 158, 42);
        panel_9.add(btnInsert);
        
        JLabel lblPhoneNo = new JLabel("Ph No.");
        lblPhoneNo.setFont(new Font("Dialog", Font.BOLD, 15));
        lblPhoneNo.setBounds(12, 170, 62, 25);
        panel_9.add(lblPhoneNo);
        
        phonetextField = new JTextField();
        phonetextField.setHorizontalAlignment(SwingConstants.CENTER);
        phonetextField.setFont(new Font("DejaVu Math TeX Gyre", Font.BOLD, 15));
        phonetextField.setColumns(10);
        phonetextField.setBounds(92, 166, 179, 32);
        panel_9.add(phonetextField);
        
        JPanel panel_12 = new JPanel();
        panel_12.setBorder(new TitledBorder(null, "Delete Records", TitledBorder.LEADING, TitledBorder.TOP, null, null));
        panel_12.setBounds(738, 332, 288, 166);
        jPanel4.add(panel_12);
        panel_12.setLayout(null);
        
        JPanel panel_11 = new JPanel();
        panel_11.setBounds(5, 17, 278, 144);
        panel_12.add(panel_11);
        panel_11.setLayout(null);
        
        JLabel lblEnterTheUsn = new JLabel("Enter the USN");
        lblEnterTheUsn.setFont(new Font("Dialog", Font.BOLD, 16));
        lblEnterTheUsn.setBounds(12, 12, 136, 25);
        panel_11.add(lblEnterTheUsn);
        
        deleteText = new JTextField();
        deleteText.setFont(new Font("DejaVu Math TeX Gyre", Font.BOLD, 16));
        deleteText.setBounds(12, 43, 236, 35);
        panel_11.add(deleteText);
        deleteText.setColumns(10);
        
        JButton btnDelete = new JButton("DELETE");
        btnDelete.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		/* here we delete the values */
        		String usn = deleteText.getText();
        		try {
					myCon.close();
					GetDatabaseConnection obb = new GetDatabaseConnection();
					myCon = obb.getMyConnection("totallist");
					myStat.close();
					myStat = myCon.createStatement();
					myStat.executeUpdate("delete from students where usn='"+usn+"'");
					myStat.executeUpdate("delete from attendinfo where usn='"+usn+"'");
					JOptionPane opn = new JOptionPane();
					opn.showMessageDialog(null, "Record Successfully deleted");
					filldetails();
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
        		
        	}
        });
        btnDelete.setFont(new Font("Dialog", Font.BOLD, 18));
        btnDelete.setBounds(46, 90, 158, 42);
        panel_11.add(btnDelete);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jTabbedPane1.addTab("ABOUT", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1038, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
    	
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bunkers_Automated_MS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bunkers_Automated_MS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bunkers_Automated_MS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bunkers_Automated_MS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bunkers_Automated_MS().setVisible(true);
            }
        });
    }
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable insertDeleteTable;
    private javax.swing.JTable shortageTable;
    private javax.swing.JTable tab1Table;
    private javax.swing.JTable t2Table;
    private JPanel panel;
    private JPanel panel_2;
    private JPanel panel_3;
    private JButton btnNewButton_1;
    private JLabel label;
    private JLabel label_1;
    private JLabel label_2;
    private JLabel label_3;
    private JLabel label_4;
    private JLabel label_5;
    private JLabel label_6;
    private JLabel lblSelectTheDate;
    private JTextField noHrsShort;
    private JTextField hoursTextField;
    private JTextField subjectTextField;
    private JTextField emailIds;
    private JTextField attendPer;
    private JTextField nameTextField;
    private JTextField usnTextField;
    private JTextField deleteText;
    private JTextField numberTextField;
    private JTextField phonetextField;
}
